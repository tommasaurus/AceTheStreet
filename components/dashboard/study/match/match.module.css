/* // Move your existing MatchGame.module.css here */
/* // Content remains the same */

.gameContainer {
  display: flex;
  flex-direction: column;
  gap: 32px;
  padding: 32px;
  max-width: 1200px;
  margin: 0 auto;
  width: 100%;
}

.timer {
  font-size: 2rem;
  font-weight: bold;
  text-align: center;
  color: #f97316;
}

.matchGameIntro {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 80vh;
  text-align: center;
  padding: 1rem;
}

.gameComplete {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 80vh;
  text-align: center;
  gap: 16px;
}

.gameComplete h2 {
  font-size: 2rem;
  font-weight: bold;
  color: #f97316;
}

.startGameButton {
  height: 56px;
  font-size: 1.1rem;
  font-weight: 600;
  background: linear-gradient(to right, #4461f2, #60a5fa);
  border: none;
  border-radius: 8px;
  color: white;
  padding: 0 32px;
  cursor: pointer;
  margin-top: 1rem;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.startGameButton::before {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    120deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  transition: 0.5s;
}

.startGameButton:hover::before {
  left: 100%;
}

:global(.dark) .startGameButton {
  color: white;
}

:global(.dark) .startGameButton:hover {
  box-shadow: 0 4px 12px rgba(249, 115, 22, 0.5);
}

.matchGameGrid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 16px;
  position: relative;
  width: 100%;
  max-width: 1000px;
  margin: 0 auto;
}

.matchCard {
  aspect-ratio: 16/10;
  border-radius: 12px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  user-select: none;
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
}

:global(.dark) .matchCard {
  background-color: #1f2937;
  border-color: #374151;
}

.matchCard.selected {
  background-color: #f3f4f6;
  transform: scale(1.05);
  box-shadow: 0 0 0 2px #f97316;
}

:global(.dark) .matchCard.selected {
  background-color: #374151;
}

.matchCard.matched {
  cursor: not-allowed;
  opacity: 0.8;
  transform: scale(0.98);
}

.matchCard.matched:hover {
  animation: pulseNoClick 2s infinite;
}

:global(.dark) .matchCard.matched {
  background-color: #064e3b;
  border-color: #059669;
}

.matchCard.wrong {
  animation: wrongMatchShake 0.5s ease;
}

:global(.dark) .matchCard.wrong {
  background-color: #991b1b;
  border-color: #ef4444;
}

@keyframes wrongMatchShake {
  0%,
  100% {
    transform: translateX(0);
    background-color: #fee2e2;
  }
  25% {
    transform: translateX(-8px) rotate(-2deg);
  }
  75% {
    transform: translateX(8px) rotate(2deg);
  }
}

.penaltyText {
  position: absolute;
  color: #ef4444;
  font-weight: bold;
  font-size: 1.5rem;
  pointer-events: none;
  animation: penaltyFloat 1s ease-out forwards;
  z-index: 20;
}

@keyframes pulseNoClick {
  0% {
    opacity: 0.8;
  }
  50% {
    opacity: 0.6;
  }
  100% {
    opacity: 0.8;
  }
}

@keyframes penaltyFloat {
  0% {
    opacity: 0;
    transform: translate(-50%, 0);
  }
  20% {
    opacity: 1;
    transform: translate(-50%, -20px);
  }
  80% {
    opacity: 1;
    transform: translate(-50%, -25px);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -30px);
  }
}

.cardContent {
  padding: 16px;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  line-height: 1.5;
}

.matchCard.blank {
  background-color: #f3f4f6;
  border-color: #e5e7eb;
  cursor: default;
  opacity: 0.3;
}

:global(.dark) .matchCard.blank {
  background-color: #111827;
  border-color: #1f2937;
}

.gameHeader {
  position: sticky;
  top: 0;
  z-index: 10;
}

.exitButtonContainer {
  justify-self: start;
}

.spacer {
  /* Empty div to balance the grid */
}

.exitButton {
  background-color: transparent;
  color: #ef4444;
  padding: 8px 16px;
  border: 2px solid #ef4444;
  border-radius: 9999px;
  cursor: pointer;
  font-size: 14px;
  font-weight: 500;
  transition: all 0.2s ease;
}

.exitButton:hover {
  background-color: #ef4444;
  color: white;
  transform: translateY(-1px);
}

.gameIcon {
  margin-bottom: 32px;
  perspective: 2000px;
  width: 120px;
  height: 120px;
  position: relative;
}

.iconGrid {
  width: 100%;
  height: 100%;
  position: relative;
  transform-style: preserve-3d;
  animation: rotate3d 8s linear infinite;
  transform-origin: center;
}

/* Create all 6 sides of the cube */
.iconCard {
  position: absolute;
  width: 100%;
  height: 100%;
  background: linear-gradient(135deg, #16a34a, #22c55e);
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 24px;
  font-weight: bold;
  color: white;
  transition: all 0.3s ease;
  backface-visibility: visible;
  box-shadow: 0 0 20px rgba(34, 197, 94, 0.2);
}

/* Position each face of the cube */
.iconCard:nth-child(1) {
  transform: translateZ(60px);
}
.iconCard:nth-child(2) {
  transform: rotateY(180deg) translateZ(60px);
}
.iconCard:nth-child(3) {
  transform: rotateY(90deg) translateZ(60px);
}
.iconCard:nth-child(4) {
  transform: rotateY(-90deg) translateZ(60px);
}
.iconCard:nth-child(5) {
  transform: rotateX(90deg) translateZ(60px);
}
.iconCard:nth-child(6) {
  transform: rotateX(-90deg) translateZ(60px);
}

:global(.dark) .iconCard {
  background: linear-gradient(135deg, #22c55e, #4ade80);
  box-shadow: 0 0 20px rgba(34, 197, 94, 0.3);
}

@keyframes rotate3d {
  0% {
    transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
  }
  100% {
    transform: rotateX(360deg) rotateY(720deg) rotateZ(360deg);
  }
}

/* Add hover effect to pause animation */
.gameIcon:hover .iconGrid {
  animation-play-state: paused;
}

.introText {
  display: flex;
  flex-direction: column;
  gap: 24px;
  margin-bottom: 24px;
}

.readyText {
  font-size: 3rem;
  font-weight: bold;
  color: #1f2937;
  margin: 0;
}

:global(.dark) .readyText {
  color: #ffffff;
}

.gameDescription {
  font-size: 1.25rem;
  color: #4b5563;
  line-height: 1.6;
}

:global(.dark) .gameDescription {
  color: #d1d5db;
}

/* Specific classes for match game icon */
.matchIconGrid {
  width: 100%;
  height: 100%;
  position: relative;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 12px;
  animation: floatAndSpin 12s ease-in-out infinite;
  transform-style: preserve-3d;
  transform-origin: center;
  perspective: 1000px;
  opacity: 0;
  transform: translateY(10px);
  transition: opacity 0.3s ease, transform 0.3s ease;
}

.matchIconGrid.animate {
  opacity: 1;
  transform: translateY(0);
  animation: floatAndSpin 12s ease-in-out infinite;
}

/* Respect user preferences */
@media (prefers-reduced-motion: reduce) {
  .matchIconGrid.animate {
    animation-duration: 20s; /* Slower animation */
  }

  .matchIconCard {
    transition-duration: 0.5s;
  }
}

.matchIconCard {
  position: relative;
  transform-style: preserve-3d;
  animation: cardPulse 3s ease-in-out infinite;
  transition: all 0.3s ease;
}

/* Front face */
.matchIconCard::before {
  content: attr(data-letter);
  position: absolute;
  width: 100%;
  height: 100%;
  background: linear-gradient(135deg, #1f2937, #2d3748);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 24px;
  font-weight: bold;
  color: #f3f4f6;
  backface-visibility: hidden;
  transform: translateZ(15px);
  box-shadow: 0 0 20px rgba(66, 53, 46, 0.2), 0 0 30px rgba(249, 115, 22, 0.08);
}

/* Back face */
.matchIconCard::after {
  content: attr(data-letter);
  position: absolute;
  width: 100%;
  height: 100%;
  background: linear-gradient(135deg, #1f2937, #2d3748);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 24px;
  font-weight: bold;
  color: #f3f4f6;
  backface-visibility: hidden;
  transform: translateZ(-15px) rotateY(180deg);
  box-shadow: 0 0 20px rgba(66, 53, 46, 0.2), 0 0 30px rgba(249, 115, 22, 0.08);
}

/* Side faces */
.matchIconCard span {
  position: absolute;
  background: linear-gradient(135deg, #1f2937, #2d3748);
  backface-visibility: hidden;
  box-shadow: 0 0 20px rgba(66, 53, 46, 0.2), 0 0 30px rgba(249, 115, 22, 0.08);
}

/* Right face */
.matchIconCard span:nth-child(1) {
  width: 30px;
  height: 100%;
  right: -15px;
  top: 0;
  transform: rotateY(90deg);
}

/* Left face */
.matchIconCard span:nth-child(2) {
  width: 30px;
  height: 100%;
  left: -15px;
  top: 0;
  transform: rotateY(-90deg);
}

/* Top face */
.matchIconCard span:nth-child(3) {
  width: 100%;
  height: 30px;
  top: -15px;
  left: 0;
  transform: rotateX(90deg);
}

/* Bottom face */
.matchIconCard span:nth-child(4) {
  width: 100%;
  height: 30px;
  bottom: -15px;
  left: 0;
  transform: rotateX(-90deg);
}

/* Individual card animations with 3D transforms */
.matchIconCard:nth-child(1) {
  animation: cardPulse 3s ease-in-out infinite;
  transform-origin: bottom right;
}

.matchIconCard:nth-child(2) {
  animation: cardPulse 3s ease-in-out infinite 0.4s;
  transform-origin: bottom left;
}

.matchIconCard:nth-child(3) {
  animation: cardPulse 3s ease-in-out infinite 0.8s;
  transform-origin: top right;
}

.matchIconCard:nth-child(4) {
  animation: cardPulse 3s ease-in-out infinite 1.2s;
  transform-origin: top left;
}

@keyframes floatAndSpin {
  0% {
    transform: translateY(0) rotateY(0deg) rotateX(10deg) scale(1);
  }
  25% {
    transform: translateY(-15px) rotateY(90deg) rotateX(-10deg) scale(1.1);
  }
  50% {
    transform: translateY(0) rotateY(180deg) rotateX(10deg) scale(1);
  }
  75% {
    transform: translateY(15px) rotateY(270deg) rotateX(-10deg) scale(1.1);
  }
  100% {
    transform: translateY(0) rotateY(360deg) rotateX(10deg) scale(1);
  }
}

@keyframes cardPulse {
  0%,
  100% {
    transform: scale(1) translateZ(0);
  }
  50% {
    transform: scale(1.05) translateZ(20px);
  }
}

@keyframes spotlight {
  0%,
  100% {
    opacity: 0;
    transform: scale(0.8) rotate(0deg);
  }
  50% {
    opacity: 0.5;
    transform: scale(1.2) rotate(180deg);
  }
}

@keyframes shimmerRotate {
  0% {
    transform: rotate(0deg) scale(1.5);
  }
  100% {
    transform: rotate(360deg) scale(1.5);
  }
}

/* Enhanced hover effects */
.gameIcon:hover .matchIconCard::before,
.gameIcon:hover .matchIconCard::after,
.gameIcon:hover .matchIconCard span {
  box-shadow: 0 0 25px rgba(66, 53, 46, 0.25), 0 0 40px rgba(249, 115, 22, 0.12);
  filter: brightness(1.2) contrast(1.1);
}

:global(.dark) .matchIconCard::before,
:global(.dark) .matchIconCard::after,
:global(.dark) .matchIconCard span {
  background: linear-gradient(135deg, #f3f4f6, #ffffff);
  color: #1f2937;
  box-shadow: 0 0 40px rgba(243, 244, 246, 0.2);
}

:global(.dark) .gameIcon:hover .matchIconCard::before,
:global(.dark) .gameIcon:hover .matchIconCard::after,
:global(.dark) .gameIcon:hover .matchIconCard span {
  box-shadow: 0 0 70px rgba(243, 244, 246, 0.3);
  filter: brightness(1.2) contrast(1.1);
}

/* Add hardware acceleration hints */
.matchIconGrid,
.iconGrid {
  will-change: transform;
  backface-visibility: hidden;
  transform: translateZ(0);
  perspective: 1000px;
}

/* Optimize box-shadows by using fewer layers */
.matchIconCard::before,
.matchIconCard::after,
.matchIconCard span {
  box-shadow: 0 0 20px rgba(66, 53, 46, 0.2), 0 0 30px rgba(249, 115, 22, 0.08);
  will-change: transform, box-shadow;
}

/* More efficient glow effect using a single box-shadow */
.gameIcon:hover .matchIconCard::before,
.gameIcon:hover .matchIconCard::after,
.gameIcon:hover .matchIconCard span {
  box-shadow: 0 0 25px rgba(66, 53, 46, 0.25), 0 0 40px rgba(249, 115, 22, 0.12);
}
